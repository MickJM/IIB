/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL ExceptionHandling();
		RETURN TRUE;
		
	END;
	
	CREATE PROCEDURE ExceptionHandling() BEGIN

		SET OutputRoot.Properties = InputRoot.Properties;
		DECLARE refMQMD reference to InputRoot.MQMD;
		IF LASTMOVE(refMQMD) THEN
			SET OutputRoot.MQMD = InputRoot.MQMD;
		END IF;
		
		DECLARE chrFile CHAR;
		DECLARE chrFunction CHAR;
		DECLARE chrType CHAR;
		DECLARE chrName CHAR;
		DECLARE chrLabel CHAR;
		DECLARE chrText CHAR;
		DECLARE chrCatalog CHAR;
		DECLARE intSeverity INTEGER;
		DECLARE intNumber INTEGER;
		DECLARE intLine INTEGER;
		
		SET chrLabel = ''; 
		CALL RetrieveMostInnerChild(InputExceptionList,chrFile,intLine,chrFunction,chrType,chrName,chrLabel,chrText,chrCatalog,intSeverity,intNumber);

		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON' NAME 'JSON';
		CREATE FIELD OutputRoot.JSON.Data IDENTITY (JSON.Object)Data;
		CREATE LASTCHILD OF OutputRoot.JSON.Data NAME 'error'; 	  		
		DECLARE refErr REFERENCE TO OutputRoot.JSON.Data."error";
		
		SET refErr.flowName = MessageFlowLabel;
		SET refErr.brokerName = BrokerName;
		IF EXISTS(OutputRoot.MQMD[]) THEN 
			SET refErr.messageId = CAST(InputRoot.MQMD.MsgId AS CHAR);
			SET refErr.correlationId = CAST(InputRoot.MQMD.CorrelationId AS CHAR);
			
		ELSEIF EXISTS(InputRoot.HTTPInputHeader[]) THEN 
			SET refErr.messageId = CAST(InputRoot.HTTPInputHeader."X-Message-Transaction-Correlation-Id" AS CHAR); 
			 					
		ELSE
			SET refErr.messageId = CAST('000000000000000000000000000000000000000000000000' AS CHAR);
			
		END IF;
		
		-- Timestamp as ISO8601
		SET refErr.timestamp    = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'IU');
		SET refErr.sourceSystem = 'IIB';
		SET refErr.code 		= intNumber;
		SET refErr.message 		= chrText; 
		SET refErr.severity 	= intSeverity;
				
	END;


CREATE PROCEDURE RetrieveMostInnerChild (IN refRoot REFERENCE,INOUT chrFile CHAR,INOUT intLine INTEGER,INOUT chrFunction CHAR, INOUT chrType CHAR, INOUT chrName CHAR, 
	INOUT chrLabel CHAR, INOUT chrText CHAR, INOUT chrCatalog CHAR, INOUT intSeverity INTEGER, INOUT intNumber INTEGER)
	BEGIN
		DECLARE Cursor REFERENCE TO refRoot;
		DECLARE LastException REFERENCE TO refRoot;
		declare field character '';
		
		WHILE LASTMOVE(Cursor) DO			
			set field = fieldname(Cursor);
		
			IF FIELDNAME(Cursor) IN (
				'RecoverableException',
				'DatabaseException',
				'ParserException',
				'ConversionException',
				'UserException',
				'MessageException',
				'FatalException',
				'ConfigurationException',
				'SecurityException',
				'CastException',
				'SqlException',
				'SocketException',
				'SocketTimeoutException',
				'UnknownException') THEN
				MOVE LastException TO Cursor;
			END IF;
			MOVE Cursor LASTCHILD;			
		END WHILE;		
	
		IF FIELDNAME(LastException) IN (
			'RecoverableException',
			'DatabaseException',
			'ParserException',
			'ConversionException',
			'UserException',
			'MessageException',
			'FatalException',
			'ConfigurationException',
			'SecurityException',
			'CastException',
			'SqlException',
			'SocketException',
			'SocketTimeoutException',
			'UnknownException') THEN
			SET chrFile = LastException.File;
			SET intLine = LastException.Line;
			SET chrFunction = LastException.Function;
			SET chrType = LastException.Type;
			SET chrName = LastException.Name;
			SET chrLabel = LastException.Label;
			SET chrText = LastException.Text;
			SET chrCatalog = LastException.Catalog;
			SET intSeverity = LastException.Severity;
			SET intNumber = LastException.Number;
			
			MOVE Cursor TO LastException.Insert;
			
			WHILE LASTMOVE(Cursor) DO
				SET chrText = chrText || ';' || Cursor.Text;
				MOVE Cursor NEXTSIBLING;
				WHILE LASTMOVE(Cursor) AND (FIELDNAME(Cursor) <> 'Insert') DO
					MOVE Cursor NEXTSIBLING;
				END WHILE;
			END WHILE;
		ELSE
			SET chrFile = '???';
			SET intLine = -1;
			SET chrFunction = '???';
			SET chrType = '???';
			SET chrName = '???';
			SET chrLabel = '???';
			SET chrText = 'Error while handling errors - Type of Exception is not in expected format';
			SET chrCatalog = '???';
			SET intSeverity = 3;
			SET intNumber = -1;			
		END IF;	
	END;

